# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def pairSum(self, head: Optional[ListNode]) -> int:
        slow, fast = head, head
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        
        curr = slow
        prev = None

        while curr:
            temp = curr.next
            curr.next = prev
            prev = curr
            curr = temp
        
        
        first_half, second_half = head, prev
        maximum = 0
        while second_half:
            maximum= max(maximum, first_half.val + second_half.val)
            first_half = first_half.next
            second_half = second_half.next
        
        return maximum
